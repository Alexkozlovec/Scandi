@import "libs/normalize";

@use "sass:map";

$breakpoints: (
  smallest: 375px,
  small: 576px,
  tablet: 768px,
  desktop-sm: 992px,
  desktop-md: 1200px,
  desktop-lg: 1400px
);

// mixins

@mixin mq($key, $from: max) {
  $size: map-get($map: $breakpoints, $key: $key);

  @media (#{$from}-width: $size) {
    @content;
  }
}

@mixin font-face($name, $url, $weight, $style: normal) {
  @font-face {
    src:
      url("#{$url}.woff2") format("woff2"),
      url("#{$url}.woff") format("woff");
    font-family: $name;
    font-weight: $weight;
    font-style: $style;
    font-display: swap;
  }
}

// @include font-face("Roboto", "../fonts/Roboto-Regular", 400);

:root {
  --color-white: #fff;
  --color-black: #000;

  // fonts
  --font-primary: "Font", "Arial", sans-serif;

  // breakpoints
  --xs: 375px;
  --sm: 576px;
  --tablet: 768px;
  --desktop-sm: 992px;
  --desktop-md: 1200px;
  --desktop-lg: 1400px;
}

/* GLOBALS */

.page-html {
  height: 100%;
  box-sizing: border-box;
  scroll-behavior: smooth;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

*:focus:not(:focus-visible) {
  outline: none;
}

.page-body {
  overflow: auto;
  margin: 0;
  padding: 0;
  height: 100%;
  min-width: 320px;
  font-family: var(--font-primary);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1.5;
  color: #f00;
  background-size: cover;
  background-repeat: no-repeat;
  background-color: var(--color-white);
}

a {
  text-decoration: none;
}

img {
  max-width: 100%;
}

button {
  border: none;
  font-family: inherit;
  cursor: pointer;
}

input {
  font: inherit;
}

.visually-hidden {
  position: absolute;
  overflow: hidden;
  border: 0;
  padding: 0;
  width: 1px;
  height: 1px;
  clip: rect(1px, 1px, 1px, 1px);
}

.list-reset {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.container {
  margin: 0 auto;
  padding: 0 15px;
  max-width: 1200px;
}
